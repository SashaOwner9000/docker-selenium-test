<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="HW0770" ignored="4" name="Surefire test" tests="22" failures="0" timestamp="09 Jan 2019 13:47:07 GMT" time="9.074" errors="0">
  <testcase name="@BeforeTest setUp" time="9.007" classname="test.java.com.testautomationguru.container.test.BaseTest">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create new service: GeckoDriverService
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:25:53&amp;apos;
System info: host: &amp;apos;HW0770&amp;apos;, ip: &amp;apos;169.254.18.194&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_181&amp;apos;
Driver info: driver.version: unknown
Command duration or timeout: 1.41 seconds">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create new service: GeckoDriverService
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'HW0770', ip: '169.254.18.194', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: driver.version: unknown
Command duration or timeout: 1.41 seconds
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:641)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:254)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:137)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
	at test.java.com.testautomationguru.container.test.BaseTest.setUp(BaseTest.java:27)
Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: GeckoDriverService
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'HW0770', ip: '169.254.18.194', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: driver.version: unknown
Build info: version: '3.5.2', revision: '10229a9', time: '2017-08-21T17:29:55.15Z'
System info: host: 'HW0770', ip: '169.254.18.194', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.lambda$get$0(ServicedSession.java:135)
	at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply(ServicedSession.java:152)
	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:180)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:183)
	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:66)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.Collections$2.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:69)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.DistinctOps$1$2.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Unknown Source)
	at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Unknown Source)
	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:72)
	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65)
	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase name="@AfterTest tearDown" time="0.0" classname="test.java.com.testautomationguru.container.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="googleTest" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <skipped/>
  </testcase> <!-- googleTest -->
  <testcase name="@BeforeTest setUp" time="0.0" classname="test.java.com.testautomationguru.container.test.SearchTest">
    <ignored/>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase name="@AfterTest tearDown" time="0.0" classname="test.java.com.testautomationguru.container.test.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase name="@AfterTest tearDown" time="0.0" classname="test.java.com.testautomationguru.container.test.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase name="@BeforeTest setUp" time="0.0" classname="test.java.com.testautomationguru.container.test.OrderTest">
    <ignored/>
  </testcase> <!-- @BeforeTest setUp -->
</testsuite> <!-- Surefire test -->
